----- Landing Page

<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="LandingPage.aspx.cs" Inherits="DemoProject_Template_DU.LandingPage" %>

<!DOCTYPE html>
<html>
<head>
    <title>DemoProject Template DU</title>
    <link href="Styles/dashboard.css" rel="stylesheet" type="text/css" />
    <script src="Scripts/angular.min.js" type="text/javascript"></script>
    <script src="Scripts/angular-route.js" type="text/javascript"></script>
    <link href="Styles/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <script src="Scripts/angular-messages.js" type="text/javascript"></script>
    <script src="Scripts/Checklist-model.js" type="text/javascript"></script>
    <script src="Scripts/angular-route.js" type="text/javascript"></script>
    <script src="myApp.js" type="text/javascript"></script>
    <script src="route.js" type="text/javascript"></script>
    <script src="Controller/myCrudeControl.js" type="text/javascript"></script>
    <script src="Factories/myCrudeFactory.js" type="text/javascript"></script>
</head>
<body>
    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">               
                <a class="navbar-brand" href="#">Sample Application</a>
            </div>
        </div>
    </nav>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-2 sidebar">
                <ul class="nav nav-sidebar">
                    <li class="active"><a href="#">Menu <span class="sr-only">(current)</span></a></li>
                    <li><a href="#crude">My Crude Page</a> </li>
                    <li><a href="#Page2">Page 2</a> </li>
                </ul>
            </div>
            <div class="col-md-10 main">
                <div ng-view ng-app="myApp" >
                
                </div>
                <div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

---------------- .CS

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Configuration;
using System.Web.Services;
using DemoProject_Template_DU;
using Newtonsoft.Json;
using MongoDB.Bson;
using System.Web.Script.Services;
using DemoProject_Template_DU.DbUtilityDB;

namespace DemoProject_Template_DU
{
    public partial class LandingPage : System.Web.UI.Page
    {

        #region varable declaration
        static DbUtility oDAL = new DbUtility();
        #endregion 

        [WebMethod]
        public static bool saveMyCrude(string objModule)
        {
            return oDAL.SaveDocument(objModule, "myCroude");
        }

        [WebMethod]
        public static bool saveMasterForLocal(string objModule)
        {
            try
            {
                //return oDAL.SaveDocument(objModule, "myCroude");
                return oDAL.SaveDocumentBsonArray(objModule, "myCroude");
            }
            catch (Exception ex)
            {
                string str = ex.Message;
                return false;
            }
        }

        [WebMethod]
        [ScriptMethod(UseHttpGet = true)]
        public static string getAllTask()
        {
            return oDAL.GetAllDocumentsWithObjectId("myCroude");
        }
        [WebMethod]
        public static bool editTask(string TaskList)
        {
            return oDAL.UpdateDocumentByObjectIdBasonArray(TaskList, "myCroude");
        }

    }
}

----------------- App

var app = angular.module('myApp', ['checklist-model', 'ngMessages', 'ngRoute']);


---- Route

app.config(function ($routeProvider) {
    $routeProvider
.when('/crude',{
templateUrl: "/partials/myCrude.html",
controller: "myCrudeCtrl"

})
.otherwise({
    redirectTo: "/partials/myCrude.html"

    
     });
});

-------------------------- Crude

<div>
 <form class="form-horizontal" name="frm">
   <h3>My Crude</h3> 

   <div class="form-group">
   <div class="control-label col-md-2">  Task: </div>
   <div class="col-md-3"><input type="text"  name="txtTask" class="form-control" ng-model="myModel.Task" /></div>   
   </div>
   <div class="form-group">
   <div class="control-label col-md-2">  Task Category: </div>
   <div class="col-md-3"><select  name="ddlCategory" class="form-control" ng-model="myModel.category"><option value="" selected>--- Select ----</option>
                                                                                   <option value="Personal" >Personal</option>
                                                                                   <option value="Office" >Office</option>
                                                                                   <option value="Team" >Team</option>
                                                                                   </select></div>   
   </div>

   <div class="form-group">
   <div class="control-label col-md-2">  Task Date : </div>
   <div class="col-md-3"><input type="date" name="Tdate" class="form-control " ng-model="myModel.TaskDate" /></div>   
   </div>

   <div class="form-group">
   <div class="control-lable col-md-2"> &nbsp;</div>
   <div class="col-md-3"><button type="submit"  ng-click="saveMyCrude(myModel)" class="btn btn-success">Save cloud</button> </div>
        &nbsp;&nbsp;<button type="submit"  ng-click="savetoLocal(myModel)" class="btn btn-success">Save locally</button> </div>
   </div>

   <div class="form-group" ng-show="mylocalModel.length > 0">
   <br /> <lable calss="form-control">Below list from Your Local storage</lable>
   <table class="table table-bordered table-hover">
   
   <thead>
   <tr>
        <th>Task</th>
        <th>Task Category</th>
        <th>Task Date</th>
    </tr>
   </thead>
   <tbody>
       <tr ng-repeat="ltasklist in mylocalModel">
        <td ng-model="localmodel.Task">{{ltasklist.Task}}</td>
        <td  ng-model="localmodel.category">{{ltasklist.category}}</td>
        <td  ng-model="localmodel.TaskDate">{{ltasklist.TaskDate}}</td>
            
       </tr>
       <tr>
                    <td colspan="3" style=" text-align :center;">&nbsp;     
                    <button type="submit" class="btn btn-success" ng-click="saveModelFromLocal(mylocalModel)">Save to Cloud</button>
                    </td>
       </tr>
   
   </tbody>
   
   
   </table>

   </div>
   <div class="from-group" >
   <br /> <label class="form-control" text="">List of task </label>
   <table class="table table-bordered table-hover">
       <thead>
            <th>Task</th>
            <th>Category</th>
            <th>Date</th>
            <th></th>
       </thead>
    <tbody>
        <tr ng-repeat="tasklist in AllTaskModelFromDB">
            <td>{{tasklist.Task}}</td>
            <td>{{tasklist.category}}</td>
            <td>{{tasklist.TaskDate}}</td>
            <td>  <input type="checkbox"    checklist-model="completedTaskList" checklist-value="tasklist"></td>

        </tr>
        
    
    </tbody>
   </table>
  <br />
   
      <button class="btn btn-primary" type="submit" ng-click="markAsCompleted()">Update</button>
   </div>
 
 </form>

</div>

--------------------- Controller

app.controller('myCrudeCtrl', function ($scope, $routeParams, mycrudeFac, $window) {



    $scope.saveMyCrude = function (myModel) {
        mycrudeFac.savecrude($scope.myModel).success(function (data) {
            $scope.success = true;

        })

    };

    $scope.saveModelFromLocal = function (myModel) {
        console.log(myModel);
        mycrudeFac.savecrudeFromLocal($scope.mylocalModel).success(function (data) {
            $window.localStorage.removeItem("localTaskList");
            $scope.mylocalModel = {};
            $scope.success = true;

        })

    };

    $scope.savetoLocal = function (myModel) {
        debugger;
        var taskList = [];
        if ($window.localStorage.getItem("localTaskList") != null) {
            taskList.push.apply(taskList, JSON.parse($window.localStorage.getItem("localTaskList")));

        }

        taskList.push($scope.myModel);
        $window.localStorage.setItem("localTaskList", angular.toJson(taskList));
        $scope.myModel = {};

        $scope.mylocalModel = angular.fromJson($window.localStorage.getItem("localTaskList"));
    };

    $scope.getfromLocal = function () {

        $scope.mylocalModel = angular.fromJson($window.localStorage.getItem("localTaskList"));

    };

    $scope.getAllTaskDB = function () {

        mycrudeFac.getAllTaskDBfac().success(function (resp) {
           
            $scope.AllTaskModelFromDB = angular.fromJson(resp.d);
            $scope.Success = true;

        })

    };


    $scope.completedTaskList = [];

    $scope.markAsCompleted = function () {
        debugger;
        var list = $scope.completedTaskList;
        for (var i in list) {
            list[i].completed = true;
            $scope.updateComletedDB(list[i]);
        }
        $scope.completedTaskList = list;
       
    };

    $scope.updateComletedDB = function (tasklist) {
        debugger;
        mycrudeFac.edittaskDB(tasklist).success(function (data) {
            $scope.success = true;


        })
    };

    $scope.getfromLocal();

    $scope.getAllTaskDB();


});
------------- Factory

app.factory('mycrudeFac', function ($http) {

    var service = {};
    service.savecrude = function (vm) {
        debugger;
        console.log(angular.toJson(vm));
        return $http({
            url: "LandingPage.aspx/saveMaster",
            method: "POST",
            data: { objModule: angular.toJson(vm) }
        })

    };

    service.savecrudeFromLocal = function (vm) {
        debugger;
        console.log(angular.toJson(vm));
        return $http({
            url: "LandingPage.aspx/saveMasterForLocal",
            method: "POST",
            data: { objModule: angular.toJson(vm) }
        })

    };

    service.getAllTaskDBfac = function () {
        return $http({
            url: "LandingPage.aspx/getAllTask",
            method: "GET",
            data: {},
            headers: { "Content-Type": "application/json" }
        })


    };
    service.edittaskDB = function (vm) { 
        return $http({
        url:"LandingPage.aspx/editTask",
        method:"POST",
        data: {TaskList:angular.toJson(vm)}
        })
    };



    return service;

});




